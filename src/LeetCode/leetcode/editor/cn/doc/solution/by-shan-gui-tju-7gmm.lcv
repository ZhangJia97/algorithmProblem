### 解题思路

时隔1个半月，重新刷这道题，发现第一思路是基于167题-有序数组的思路来做，不记得还有hashmap的方法了。记录一下。

基于hashmap的方法，不需要额外遍历一次数组记录到hashmap里，遍历一次的时候，顺便记录就可以满足要求了。

### 代码-基于有序数组

* python3

```python
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        nums_idx = [(num, i) for i, num in enumerate(nums)]
        nums_idx.sort(key=lambda x: x[0])
        left = 0
        right = len(nums) - 1
        while left < right:
            if nums_idx[left][0] + nums_idx[right][0] == target:
                return [nums_idx[left][1], nums_idx[right][1]]
            elif nums_idx[left][0] + nums_idx[right][0] > target:
                right -= 1
            else:
                left += 1
```

* python3

```python
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        hash_map = {}
        for i, num in enumerate(nums):
            if target - num in hash_map:
                return [i, hash_map[target - num]]
            hash_map[num] = i
```

